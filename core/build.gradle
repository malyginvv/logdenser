plugins {
    id "jacoco"
    id "java-library"
    id "maven-publish"
    id "signing"
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jUnitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"
}

jacoco {
    toolVersion "0.8.9"
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = "CLASS"
            includes = ["pro.malygin.logdenser.*"]
            excludes = ["pro.malygin.logdenser.input.*"]
            limit {
                counter = "LINE"
                minimum = 0.9
            }
            limit {
                counter = "BRANCH"
                minimum = 0.8
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "logdenser-core"
            from components.java
            pom {
                name = "LogDenser"
                description = "A small Java library for grouping strings based on similarity"
                url = "https://github.com/malyginvv/logdenser"
                licenses {
                    license {
                        name = "MIT License"
                        url = "http://www.opensource.org/licenses/mit-license.php"
                    }
                }
                developers {
                    developer {
                        id = "malyginvv"
                        name = "Vasilii Malygin"
                    }
                }
                scm {
                    connection = "scm:git:git@github.com:malyginvv/logdenser.git"
                    developerConnection = "scm:git:git@github.com:malyginvv/logdenser.git"
                    url = "https://github.com/malyginvv/logdenser"
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    options.addBooleanOption("html5", true)
}